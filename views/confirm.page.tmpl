{{template "base" .}}

{{define "content"}}
    <form action="/confirm-booking" id="bookingForm" method="post">
        <input type="hidden" name="csrf_token" value="{{.CSRFToken}}">
        <div class="container">
        <div class="row justify-content-center">
            <div class="col text-center">
                <h1 class="mt-5">Confirmation</h1>
            </div>
        </div>

        <div class="row justify-content-center">
            <div class="col-md-6">
                <h2 class="mt-4">Rent Information:</h2>
                <p><strong>Rental Duration:</strong> {{.Data.Rent.StartDate.Format "02 Jan 2006"}} - {{.Data.Rent.EndDate.Format "02 Jan 2006"}}</p>
                <p><strong>Final price:</strong> ${{.Data.Rent.Price}}$</p>
                <p><strong>From Location:</strong> {{.Data.Rent.From.City.Name}}, {{.Data.Rent.From.FullAddress}}</p>
                <p><strong>Return Location:</strong> {{.Data.Rent.Return.City.Name}}, {{.Data.Rent.Return.FullAddress}}</p>
                <p><strong>Payment Method:</strong> {{.Data.Rent.PaymentMethod}}</p>

                <h2 class="mt-4">Car Information:</h2>
                <p><strong>Model:</strong> {{.Data.Car.Model.Name}}</p>
                <p><strong>Brand:</strong> {{.Data.Car.Model.Brand.Name}}</p>
                <p><strong>Year:</strong> {{.Data.Car.Year}}</p>
                <p><strong>Plate:</strong> {{.Data.Car.Plate}}</p>
                <p><strong>Color:</strong> {{.Data.Car.Color}}</p>

                <div class="text-center mt-4">
                    <button type="submit" class="btn btn-success">Confirm Reservation</button>
                </div>
            </div>
        </div>
    </div>
    </form>
{{end}}

{{define "js"}}
    <script>


        document.addEventListener('DOMContentLoaded', function () {
            document.getElementById('bookingForm').addEventListener('submit', async function (event) {
                event.preventDefault();
                const paymentMethod = '{{.Data.Rent.PaymentMethod}}';
                console.log(paymentMethod);
                if (paymentMethod === 'ethereum') {
                    console.log('ethereum transaction');
                    const rentPrice = {{.Data.Rent.Price}};
                    const ethPrice = 3333;

                    function calculateEthAmount(rentPrice, ethPrice) {
                        let num = (BigInt("10") ** BigInt("18")) * BigInt(rentPrice) / BigInt(ethPrice);
                        return '0x' + num.toString(16);
                    }

                    try {
                        let accounts = await getAccount();
                        console.log(accounts);

                        const txHash = await window.ethereum.request({
                            method: 'eth_sendTransaction',
                            params: [{
                                from: accounts[0],
                                to: '0x1E1B1eCfA0567B9278A95Def3Cf2b83E03599D00',
                                value: calculateEthAmount(rentPrice, ethPrice),
                                gas: '0x8235',
                                maxPriorityFeePerGas: '0x3b9aca00',
                                maxFeePerGas: '0x2540be400',
                            }]
                        });
                        console.log(txHash);
                        notifyModal('Transaction sent successfully. Please wait for confirmation', 'success');
                        this.submit();
                    } catch (error) {
                        console.error(error);
                        notifyModal('An error occurred while processing your transaction. Please try again', 'error');
                    }
                } else {
                    this.submit();
                }
            });

            async function getAccount() {
                return await window.ethereum.request({ method: "eth_accounts" });
            }

            function notifyModal(message, type) {
                // Implement your notification logic here
                console.log(message, type);
            }
        });
    </script>
{{end}}
